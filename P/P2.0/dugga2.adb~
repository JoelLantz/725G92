with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;
with Ada.Float_Text_IO; use Ada.Float_Text_IO;

procedure Dugga is
   
   --FUNKTION
   function UP1 (S : in String)
      return Integer is
      
      I : Integer;
      F : Float;
      
   begin
      F := (Float'Value(S))**2;
      F := Float'Floor(F);
      I := Integer(F);
      return I;
   end UP1;
   
   
   --OPERATOR
   function "/" (Left : in String;
		 Right : in Float)
		return Integer is    
      
      F : Float;
    
   begin
      F := Float'Ceiling(Float'Value(Left) / Right);
      return Integer(F);    
   end "/";
   
   
   --PROCEDUR
   procedure UP3 (F1 : out Float; 
		  F2 : out Float;
		  F3 : out Float) is

   begin
      
	 Put("Mata in ett flyttal: ");
	 Get(F1);
	 Put("Mata in ett flyttal: ");
	 Get(F2);
	 F3 := Float'Rounding(F1*F2);            
   end UP3;
   
   F : Float;
   F2 : Float;
   F3 : Float;
   I : Integer;
   S : String(1..3);
   
begin
   --UPPGIFT 1
   Put("Mata in l채ngden: ");
   Get(S);
   Put("Den ber채knade arean blev: ");
   Put(UP1(S), Width => 0);
   New_Line(2);
   
   --UPPGIFT 2
   Put("Mata in en str채ng: ");
   Get(S);
   Put("Mata in ett flyttal: ");
   Get(F);
   Put("Den ber채knade kvoten mellan " & S & " och ");
   Put(F, Fore => 0, Aft => 1, Exp => 0);
   Put(" blir ");
   Put(S/F, Width => 0);
   New_Line(2);
    
   --UPPGIFT 3
   UP3(F, F2, F3);
   Put("Du matade in flyttalet: ");
   Put(F, Fore => 0, Aft => 1, Exp => 0);
   Put(" och flyttalet: ");
   Put(F2, Fore => 0, Aft => 1, Exp => 0);
   Put(" och produkten blev ");
   Put(F3);
   
end Dugga;
